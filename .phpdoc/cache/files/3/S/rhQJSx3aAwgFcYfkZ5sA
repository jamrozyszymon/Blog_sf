1687485544
waR3U4bTeM%3Ae4d0a1cddef628f0137404c128d52cf7-1aadbf0a5e95504c489b04b92e089245
s:14140:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"1aadbf0a5e95504c489b04b92e089245";s:39:" phpDocumentor\Reflection\Php\File name";s:20:"default_metadata.php";s:39:" phpDocumentor\Reflection\Php\File path";s:48:"var/cache/prod/doctrine/orm/default_metadata.php";s:41:" phpDocumentor\Reflection\Php\File source";s:9668:"<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'App__Entity__Post__CLASSMETADATA__' => 0,
'App__Entity__PostLike__CLASSMETADATA__' => 1,

], [

0 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Post',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Post',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\PostRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'content' => [
                            'fieldName' => 'content',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 1000,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'content',
                        ],
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'id',
                            'id' => true,
                        ],
                        'created' => [
                            'fieldName' => 'created',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'created',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'content' => 'content',
                        'id' => 'id',
                        'created' => 'created',
                    ],
                ],
                'columnNames' => [
                    [
                        'content' => 'content',
                        'id' => 'id',
                        'created' => 'created',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'post',
                    ],
                ],
                'lifecycleCallbacks' => [
                    [
                        'prePersist' => [
                            'onPrePersist',
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'postLike' => [
                            'fieldName' => 'postLike',
                            'mappedBy' => 'post',
                            'targetEntity' => 'App\\Entity\\PostLike',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Post',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
1 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\PostLike',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\PostLike',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'id',
                            'id' => true,
                        ],
                        'created' => [
                            'fieldName' => 'created',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'created',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'created' => 'created',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'created' => 'created',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'postlike',
                    ],
                ],
                'lifecycleCallbacks' => [
                    [
                        'prePersist' => [
                            'onPrePersist',
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'post' => [
                            'fieldName' => 'post',
                            'joinColumns' => [
                                [
                                    'name' => 'post',
                                    'unique' => false,
                                    'nullable' => true,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'postLike',
                            'targetEntity' => 'App\\Entity\\Post',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\PostLike',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'post' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'post' => 'post',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'post',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},

]];
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";